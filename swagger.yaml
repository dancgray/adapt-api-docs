swagger: '2.0'
info:
  description: >-
    This is the API documentation for the Adapt authoring tool. More information
    on the Adapt authoring tool can be found.
    [here](https://github.com/adaptlearning/adapt_authoring/)
  version: "0.0.2"
  title: Adapt Authoring
  license:
    name: GPL-3.0
    url: 'https://github.com/adaptlearning/adapt_authoring/blob/master/LICENSE'
host: 'localhost:5000'
basePath: /api/
tags:
  - name: auth
    description: Local authentication. The standard basic authentication plugin.
  - name: users
    description: Operations about users.
  - name: tenants
    description: Operations about tenants.
  - name: courses
    description: Operations about courses.
  - name: content
    description: Operations about content.
  - name: assets
    description: Operations about assets.
  - name: output
    description: Output endpoints, e.g preview, publish.
  - name: plugins
    description: Operations about plugins.
  - name: language
    description: End point for localisation.
  - name: configuration
    description: End point for getting configuration data.
  - name: tags
    description: End point for getting tags.
schemes:
  - http
paths:
  /login:
    post:
      tags:
        - auth
      summary: Login
      description: 'End point for basic authentication'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          description: Unique identifier representing a specific user.
          required: true
          type: string
        - name: password
          in: formData
          description: Password string.
          required: true
          type: string
      responses:
        '200':
          description: Successful login
          schema:
            $ref: '#/definitions/Login'
        '401':
          description: Unauthorised
          schema:
            $ref: '#/definitions/ErrorCode'
  /loginas:
    post:
      tags:
        - auth
      summary: Login as
      description: 'Not sure what this is for.'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          description: Unique identifier representing a specific user.
          required: true
          type: string
      responses:
        '200':
          description: Successful login
          schema:
            $ref: '#/definitions/Login'
        '401':
          description: Unauthorised
          schema:
            $ref: '#/definitions/ErrorCode'
  /logout:
    post:
      tags:
        - auth
      summary: Logout
      description: 'Logout endpoint.'
      produces:
        - application/json
      responses:
        '200':
          description: Successful logout
          schema:
            $ref: '#/definitions/Success'
  /register:
    post:
      tags:
        - auth
      summary: Register
      description: 'Not sure if this is used or not...'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          description: Unique identifier representing a specific user.
          required: true
          type: string
        - name: password
          in: formData
          description: Password.
          required: true
          type: string
        - name: retypePassword
          in: formData
          description: Password confirmation.
          required: true
          type: string
      responses:
        '200':
          description: New user account details
          schema:
            $ref: '#/definitions/Register'
  /authcheck:
    get:
      tags:
        - auth
      summary: Get authenticated session details
      description: 'Returns an objest containing values for the currently authenticated session.'
      produces:
        - application/json
      responses:
        '200':
          description: Current authenticated session values
          schema:
            $ref: '#/definitions/UserSession'
  /userpasswordreset/{token}:
    post:
      tags:
        - auth
      summary: Reset password
      description: 'Allows the user to change their password after receiving a reset password email. TODO - check if token needs to be passed in the path and body.'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: token
          in: path
          description: The token created by the reset password request.
          required: true
          type: string
        - name: user
          in: formData
          description: Unique identifier representing a specific user. Matches _id in user record.
          required: true
          type: string
        - name: password
          in: formData
          description: New password.
          required: true
          type: string
        - name: token
          in: formData
          description: The token created by the reset password request.
          required: true
          type: string
      responses:
        '200':
          description: Unknown
  /user:
    get:
      tags:
        - users
      summary: Get users
      description: 'Returns an array of all users. Get requests for /user/{id} with no match will return a status code of 200 and false string in the body.'
      produces:
        - application/json
      responses:
        '200':
          description: An array of user details
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '500':
          description: Error.
    post:
      tags:
        - users
      summary: Create user
      description: 'The create user endpoint is used to create a single user. A user must have an email, password and be asigned to at least one tenant and role. If a duplicate email is found an error will be returned. The 500 error actually returns HTML, it would be more useful if this was JSON.'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          description: users email address.
          required: true
          type: string
        - name: password
          in: formData
          description: Password string.
          required: true
          type: string
        - name: _tenantId
          in: formData
          description: Collection id for tenant that the user will be assigned to.
          required: true
          type: string
        - name: role
          in: formData
          description: Collection id for role that the user will be assigned.
          required: true
          type: string
      responses:
        '200':
          description: Successfuly created a user
          schema:
            $ref: '#/definitions/Usercreate'
        '500':
          description: Error
  /user/{id}:
    get:
      tags:
        - users
      summary: Get a specific user
      description: 'End point for getting results for a specified user.'
      produces:
        - application/json
        - text/plain; charset=utf-8
      parameters:
        - name: id
          in: path
          description: The user id.
          required: true
          type: string
      responses:
        '200':
          description: An object containing a single user
          schema:
            $ref: '#/definitions/User'
        '500':
          description: Error.
    put:
      tags:
        - users
      summary: Get a specific user
      description: 'End point for updating a specified user.'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The user id.
          required: true
          type: string
        - name: email
          in: formData
          description: users email address.
          required: true
          type: string
        - name: password
          in: formData
          description: Password string.
          required: true
          type: string
        - name: _tenantId
          in: formData
          description: Collection id for tenant that the user will be assigned to.
          required: true
          type: string
        - name: role
          in: formData
          description: Collection id for role that the user will be assigned.
          required: true
          type: string
      responses:
        '200':
          description: An object containing a single user
          schema:
            $ref: '#/definitions/Usercreate'
        '500':
          description: Error.
    delete:
      tags:
        - users
      summary: Destroy a specific user
      description: 'End point for destroy action on a specified user.'
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The user id.
          required: true
          type: string
      responses:
        '200':
          description: Success response
          schema:
            $ref: '#/definitions/Success'
        '500':
          description: Error.
  /user/me:
    get:
      tags:
        - users
      summary: User profile
      description: 'The User Profile endpoint returns information about the Uber user that has authorized with the application.'
      produces:
        - application/json
      responses:
        '200':
          description: An object containing a single user
          schema:
            $ref: '#/definitions/Me'
        '500':
          description: Error.
  /user/resetpassword:
    post:
      tags:
        - users
      summary: Reset password
      description: 'The reset password endpoint expects an email and new password in the request body. It updates the password for the user record with matching email and attempts to send a confirmation email.'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          description: Users email address.
          required: true
          type: string
        - name: password
          in: formData
          description: Password string.
          required: true
          type: string
      responses:
        '200':
          description: Success response
          schema:
            $ref: '#/definitions/Success'
        '500':
          description: Error.
  /user/bulkaction:
    put:
      tags:
        - users
      summary: Soft removel of users
      description: 'The bulkaction endpoint expects a boolean value for delete or restore in the request body. It sets the value of _isDeleted on a user record. This endpoint need further clarification in how or if it is used.'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        '200':
          description: Success response
          schema:
            $ref: '#/definitions/Success'
        '500':
          description: Error.
  /tenant:
    get:
      tags:
        - tenants
      summary: Get all tenants
      description: 'Returns an array of all tenants.'
      produces:
        - application/json
      responses:
        '200':
          description: An array of tenant details
          schema:
            type: array
            items:
              $ref: '#/definitions/Tenant'
        '500':
          description: Error.
    post:
      tags:
        - tenants
      summary: Create a single tenant
      description: 'End point for creating a tenant record.'
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: name
          in: formData
          description: Tenant name to be used by application. Master tenants will have a database created with name as the dbname.
          required: true
          type: string
        - name: displayName
          in: formData
          description: Tenant name displayed in interface.
          required: true
          type: string
        - name: isMaster
          in: formData
          description: Indicates if this tenant should be a master tenant.
          required: true
          type: boolean
      responses:
        '200':
          description: An single tenant object
          schema:
            $ref: '#/definitions/Tenant'
        '500':
          description: Error.
  /tenant/query:
    get:
      tags:
        - tenants
      summary: Get all tenants
      description: 'Query tenants for lazy loading. Can accept query options in body or query parameters.'
      produces:
        - application/json
      responses:
        '200':
          description: An array of tenant details
          schema:
            type: array
            items:
              $ref: '#/definitions/Tenant'
        '500':
          description: Error.
  /tenant/{id}:
    get:
      tags:
        - tenants
      summary: Get a single tenant
      description: 'End point for returning details of a specified tenant. Get requests for /tenant/{id} with no match will return a status code of 200 and false string in the body.'
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The tenant id.
          required: true
          type: string
      responses:
        '200':
          description: An single tenant object
          schema:
            $ref: '#/definitions/Tenant'
        '500':
          description: Error.
    put:
      tags:
        - tenants
      summary: Update a tenant
      description: 'End point for updating a tenant record. Put request with no matching record will return 500 status code.'
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: id
          in: path
          description: The tenant id.
          required: true
          type: string
        - name: name
          in: formData
          description: Tenant name to be used by application. Master tenants will have a database created with name as the dbname.
          required: true
          type: string
        - name: displayName
          in: formData
          description: Tenant name displayed in interface.
          required: true
          type: string
      responses:
        '200':
          description: An single tenant object
          schema:
            $ref: '#/definitions/Tenant'
        '500':
          description: Error.
    delete:
      tags:
        - tenants
      summary: Delete (softly) a tenant
      description: 'End point for deleting a tenant. Records are soft deleted, i.e "_isDeleted" : true. Delete requests for /tenant/{id} with no match will return a status code of 500.'
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The tenant id.
          required: true
          type: string
      responses:
        '200':
          description: An single tenant object
          schema:
            $ref: '#/definitions/TenantDelete'
        '500':
          description: Error.
  /content/course:
    get:
      tags:
        - courses
      summary: Get courses
      description: 'Returns an array of all courses.'
      produces:
        - application/json
      responses:
        '200':
          description: An array of course details
          schema:
            type: array
            items:
              $ref: '#/definitions/Course'
        '500':
          description: Error.
    post:
      tags:
        - courses
      summary: Create a course
      description: 'End point for creating a course. See [course schema](https://github.com/adaptlearning/adapt_authoring/blob/master/plugins/content/course/model.schema) for full list of fields.'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: title
          in: formData
          description: Title shown in the authoring tool.
          required: true
          type: string
        - name: displayName
          in: formData
          description: Display title.
          required: false
          type: string
        - name: body
          in: formData
          description: Course body text.
          required: false
          type: string
        - name: _isShared
          in: formData
          description: Set if course is private or shared between tenant users.
          required: true
          type: boolean
        - name: createdBy
          in: formData
          description: User Id, assigns ownership of the course.
          required: true
          type: string
      responses:
        '200':
          description: An object containing details of the created course
          schema:
            $ref: '#/definitions/CourseCreate'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /content/course/{id}:
    get:
      tags:
        - courses
      summary: Get a specific course
      description: 'End point for getting results for a specified course.'
      produces:
        - application/json
        - text/plain; charset=utf-8
      parameters:
        - name: id
          in: path
          description: The course id.
          required: true
          type: string
      responses:
        '200':
          description: An object containing a single user
          schema:
            $ref: '#/definitions/Course'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      tags:
        - courses
      summary: Update a specific course
      description: 'End point for updating a specified course. See [course schema](https://github.com/adaptlearning/adapt_authoring/blob/master/plugins/content/course/model.schema) for full list of fields.'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The course id.
          required: true
          type: string
        - name: title
          in: formData
          description: Title shown in the authoring tool.
          required: true
          type: string
        - name: displayName
          in: formData
          description: Display title.
          required: false
          type: string
        - name: body
          in: formData
          description: Course body text.
          required: false
          type: string
        - name: _isShared
          in: formData
          description: Set if course is private or shared between tenant users.
          required: true
          type: boolean
        - name: createdBy
          in: formData
          description: User Id, assigns ownership of the course.
          required: true
          type: string
      responses:
        '200':
          description: An object containing a success boolean
          schema:
            $ref: '#/definitions/Success'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
    delete:
      tags:
        - courses
      summary: Delete a specific course
      description: 'End point for deleting a specified course.'
      produces:
        - application/json
        - text/plain; charset=utf-8
      parameters:
        - name: id
          in: path
          description: The course id.
          required: true
          type: string
      responses:
        '200':
          description: An object containing a success boolean
          schema:
            $ref: '#/definitions/Success'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /duplicatecourse/{id}:
    get:
      tags:
        - courses
      summary: Duplicate a course
      description: 'Duplicates the course matching the path id. Returns an object with the new course id.'
      produces:
        - application/json
        - text/plain; charset=utf-8
      parameters:
        - name: id
          in: path
          description: The id of the course to be duplicated.
          required: true
          type: string
      responses:
        '200':
          description: An object containing the new course id and success status
          schema:
            $ref: '#/definitions/DuplicateCourse'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /my/course:
    get:
      tags:
        - courses
      summary: Return my courses
      description: 'Returns an object with all of the courses owned by the authenticated user. Array is empty if user does not own any courses'
      produces:
        - application/json
      responses:
        '200':
          description: An object containing an array of courses
          schema:
            $ref: '#/definitions/MyCourse'
  /shared/course:
    get:
      tags:
        - courses
      summary: Return shared courses
      description: 'Returns an object with all of the courses shared with the authenticated user. Array is empty if no courses are shared.'
      produces:
        - application/json
      responses:
        '200':
          description: An object containing an array of courses
          schema:
            $ref: '#/definitions/MyCourse'
  /content/schema:
    get:
      tags:
        - content
      summary: Get all content schema
      description: 'Returns an object with all content and plugin schema.'
      produces:
        - application/json
      responses:
        '200':
          description: An object containing all content related schema, varies depending on installed plugins.
        '500':
          description: Error.
  /content/{type}:
    get:
      tags:
        - content
      summary: Get content type
      description: 'Returns an array of all content defined by type. Type is expected to be singular.'
      produces:
        - application/json
      parameters:
        - name: type
          in: path
          description: The type of content to be returned.
          required: true
          type: string
      responses:
        '200':
          description: An array containing content.
        '500':
          description: Error.
    post:
      tags:
        - content
      summary: Create content
      description: 'End point for creating content defined by type. '
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: type
          in: path
          description: The type of content to be returned.
          required: true
          type: string
        - in: formData
          name: user
          description: The content to be created.
          type: string
      responses:
        '200':
          description: An object containing details of the created content. Includes enabled extensions.
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /content/{type}/query:
    get:
      tags:
        - content
      summary: Get content type - TODO expects response body for query option, this does not conform to API standard.
      description: 'Returns an array of all content defined by type and filtered by options in request body. Type is expected to be singular.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: type
          in: path
          description: The type of content to be returned.
          required: true
          type: string
      responses:
        '200':
          description: An array containing content JSON.
        '500':
          description: Error.
  /content/{type}/{id}:
    get:
      tags:
        - content
      summary: Get content type defined by type and id.
      description: 'Returns an object for specified content type and id.'
      produces:
        - application/json
      parameters:
        - name: type
          in: path
          description: The type of content to be returned.
          required: true
          type: string
      responses:
        '200':
          description: An object containing content JSON.
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      tags:
        - content
      summary: Update content type defined by type and id.
      description: 'Updates an object for specified content type and id.'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The content id to be updated.
          required: true
          type: string
        - name: type
          in: path
          description: The type of content to be updates.
          required: true
          type: string
        - in: formData
          name: content
          description: The content to be updated. this would be a JSON object with the new values.
          type: string
      responses:
        '200':
          description: Success response.
          schema:
            $ref: '#/definitions/Success'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
    delete:
      tags:
        - content
      summary: Destroy content type defined by type and id.
      description: 'Destroys content for specified content type and id.'
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The content id.
          required: true
          type: string
        - name: type
          in: path
          description: The type of content to be returned.
          required: true
          type: string
      responses:
        '200':
          description: Success response.
          schema:
            $ref: '#/definitions/Success'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /content/{type}/switch/{id}/{switchid}:
    put:
      tags:
        - content
      summary: Switch siblings. TODO - change to requestBody in swagger v3.0 using ref  ContentNewLayout
      description: 'Switch siblings of content type. Content siblings defined by switchid and id. Typically used to swap component position'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id to be updated.
          required: true
          type: string
        - name: switchid
          in: path
          description: The sibling id to be updated.
          required: true
          type: string
        - name: type
          in: path
          description: The type of content to be updates.
          required: true
          type: string
        - in: data
          name: switch
          description: The operation options.
          type: string
      responses:
        '200':
          description: Success response.
          schema:
            $ref: '#/definitions/Success'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /content/clipboard/copy:
    post:
      tags:
        - content
      summary: Copy end point - TODO use requestBody in swagger v3 using the ClipboardCopyData schema
      description: 'APIs for server-side copy'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - in: formData
          name: copy options
          description: The id and options of the object to copy to clipboard.
          type: string
      responses:
        '200':
          description: An object containing the copied content clipboard id value.
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /content/clipboard/paste:
    post:
      tags:
        - content
      summary: Paste end point - TODO use requestBody in swagger v3 using the ClipboardPasteData schema
      description: 'APIs for server-side paste '
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - in: formData
          name: paste options
          description: The id and options of the object to paste.
          type: string
      responses:
        '200':
          description: Success object.
          schema:
            $ref: '#/definitions/Success'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /asset/query:
    get:
      tags:
        - assets
      summary: Return queried assets
      description: 'Returns an object with all of the assets shared with the authenticated user. Array is empty if no assets are shared.'
      produces:
        - application/json
      responses:
        '200':
          description: An object containing an array of assets
          schema:
            $ref: '#/definitions/Assets'
  /asset:
    post:
      tags:
        - assets
      summary: Upload an asset
      description: 'End point for uploading an asset file and asset data. See [asset schema](https://github.com/adaptlearning/adapt_authoring/blob/master/lib/dml/schema/system/asset.schema) for full list of fields.'
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: The asset to create.
          schema:
            $ref: '#/definitions/Asset'
      responses:
        '200':
          description: An object containing details of the created asset
          schema:
            $ref: '#/definitions/AssetCreate'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /asset/{id}:
    get:
      tags:
        - assets
      summary: Returns a single asset defined by id
      description: 'Returns an asset object.'
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the asset to be returned.
          required: true
          type: string
      responses:
        '200':
          description: An object containing an asset
          schema:
            $ref: '#/definitions/Asset'
    put:
      tags:
        - assets
      summary: Update a specific asset
      description: 'End point for updating a asset course. See [asset schema](https://github.com/adaptlearning/adapt_authoring/blob/master/lib/dml/schema/system/asset.schema) for full list of fields.'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The asset id.
          required: true
          type: string
      responses:
        '200':
          description: An object containing a success boolean
          schema:
            $ref: '#/definitions/Success'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
    delete:
      tags:
        - assets
      summary: Delete a specific asset
      description: 'End point for deleting a specified asset.'
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The asset id.
          required: true
          type: string
      responses:
        '200':
          description: An object containing a success boolean
          schema:
            $ref: '#/definitions/Success'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /asset/trash/{id}:
    put:
      tags:
        - assets
      summary: Soft delete a specific asset
      description: Update the _isDeleted property for an asset so that it is not available in the content asset picker.
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The asset id.
          required: true
          type: string
      responses:
        '200':
          description: An object containing a success boolean
          schema:
            $ref: '#/definitions/Success'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /asset/restore/{id}:
    put:
      tags:
        - assets
      summary: Restore a specific asset
      description: Update the _isDeleted property for an asset so that it can be used with the asset picker.
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The asset id.
          required: true
          type: string
      responses:
        '200':
          description: An object containing a success boolean
          schema:
            $ref: '#/definitions/Success'
        '500':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'

  /asset/serve/{id}:
    get:
      tags:
        - assets
      summary: Serves a single asset file defined by id
      description: 'Returns an asset file.'
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the asset to be returned.
          required: true
          type: string
      responses:
        '200':
          description: An an asset file
  /asset/thumb/{id}:
    get:
      tags:
        - assets
      summary: Serves a single asset thumbnail file defined by id
      description: 'Returns an asset thumbnail file.'
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the asset to be returned.
          required: true
          type: string
      responses:
        '200':
          description: An an asset thumbnail file
  /shared/asset/{id}:
    get:
      tags:
        - assets
      summary: Serves a single shared asset file defined by id
      description: 'Returns an shared asset file.'
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the asset to be returned.
          required: true
          type: string
      responses:
        '200':
          description: An an asset file


  /{plugintype}:
    get:
      tags:
        - plugins
      summary: Return a collection of plugins
      description: 'Returns an array of objects. Each object describes an installed plugin of type plugintype.'
      produces:
        - application/json
      parameters:
        - name: plugintype
          in: path
          description: The plugin type, either componenttype, extensiontype, menutype or themetype.
          required: true
          type: string
      responses:
        '200':
          description: An array of plugins
          schema:
            $ref: '#/definitions/PluginArray'
  /{plugintype}/{id}:
    get:
      tags:
        - plugins
      summary: Return a single plugin
      description: 'Returns an single plugin object defined by id. '
      produces:
        - application/json
      parameters:
        - name: plugintype
          in: path
          description: The plugin type, either componenttype, extensiontype, menutype or themetype.
          required: true
          type: string
        - name: id
          in: path
          description: The id of the plugin to be returned.
          required: true
          type: string
      responses:
        '200':
          description: An single plugin object
          schema:
            $ref: '#/definitions/PluginSingle'
        '404':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      tags:
        - plugins
      summary: Update a single plugin
      description: 'Update a single plugin type definition by id. Currently only used to update _isAvailableInEditor property'
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: plugintype
          in: path
          description: The plugin type, either componenttype, extensiontype, menutype or themetype.
          required: true
          type: string
        - name: id
          in: path
          description: The id of the plugin to be updated.
          required: true
          type: string
        - name: _isAvailableInEditor
          in: formData
          description: Sets plugin availability in the course editor.
          required: true
          type: boolean
      responses:
        '200':
          description: Success boolean
          schema:
            $ref: '#/definitions/Success'
  /{plugintype}/checkversion/{id}:
    get:
      tags:
        - plugins
      summary: Plugin version check
      description: 'Check if a higher version is available for the plugin '
      produces:
        - application/json
      parameters:
        - name: plugintype
          in: path
          description: The plugin type, either componenttype, extensiontype, menutype or themetype.
          required: true
          type: string
        - name: id
          in: path
          description: The id of the plugin to be checked.
          required: true
          type: string
      responses:
        '200':
          description: An single plugin object
          schema:
            $ref: '#/definitions/PluginCheck'
        '404':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /{plugintype}/update:
    post:
      tags:
        - plugins
      summary: Update plugins
      description: 'Updates all plugins of type plugintype and with an _id matching a value in targets arrays.'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: plugintype
          in: path
          description: The plugin type, either componenttype, extensiontype, menutype or themetype.
          required: true
          type: string
        - name: targets
          in: formData
          description: An array of plugin id's to be updated.
          required: true
          type: array
          items:
            type: string
      responses:
        '200':
          description: An object containing a success boolean
          schema:
            $ref: '#/definitions/PluginsUpgraded'
        '404':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'

  /extension/disable/{courseid}:
    post:
      tags:
        - plugins
      summary: Remove extensions from a course TODO actually consumes JSON but swagger does not allow this.
      description: 'End point for remove an extension from content collections for a given course.'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: courseid
          in: path
          description: Course id from which the extensions will be removed.
          required: true
          type: string
        - name: extensions
          in: formData
          description: An array of extension id's to be removed.
          required: true
          type: array
          items:
            type: string
      responses:
        '200':
          description: An object containing a success boolean
          schema:
            $ref: '#/definitions/Success'
        '404':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /extension/enable/{courseid}:
    post:
      tags:
        - plugins
      summary: Adds extensions to a course TODO actually consumes JSON but swagger does not allow this.
      description: 'End point for adding an extension to a course and its content collections.'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: courseid
          in: path
          description: Course id to which the extensions will be added.
          required: true
          type: string
        - name: extensions
          in: formData
          description: An array of extension id's to be added.
          required: true
          type: array
          items:
            type: string
      responses:
        '200':
          description: An object containing a success boolean
          schema:
            $ref: '#/definitions/Success'
        '404':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /menu/{menuid}/makeitso/{courseid}:
    post:
      tags:
        - plugins
      summary: Enables a menu for a course TODO - if the courseid is not found it returns success = true
      description: 'End point for adding a menu plugin to a course.'
      produces:
        - application/json
      parameters:
        - name: menuid
          in: path
          description: The id of the menu plugin to be added.
          required: true
          type: string
        - name: courseid
          in: path
          description: Course id to which the menu will be added.
          required: true
          type: string
      responses:
        '200':
          description: An object containing a success boolean
          schema:
            $ref: '#/definitions/Success'
        '404':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /theme/{themeid}/makeitso/{courseid}:
    post:
      tags:
        - plugins
      summary: Enables a theme for a course TODO - if the courseid is not found it returns success = true
      description: 'End point for adding a theme plugin to a course.'
      produces:
        - application/json
      parameters:
        - name: themeid
          in: path
          description: The id of the theme plugin to be added.
          required: true
          type: string
        - name: courseid
          in: path
          description: Course id to which the theme will be added.
          required: true
          type: string
      responses:
        '200':
          description: An object containing a success boolean
          schema:
            $ref: '#/definitions/Success'
        '404':
          description: Error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /theme/preview/{themename}/{version}:
    get:
      tags:
        - plugins
      summary: Get the theme preview image
      description: 'Endpoint for downloading the theme preview image'
      produces:
        - image/jpg
      parameters:
        - name: themename
          in: path
          description: The name of the theme.
          required: true
          type: string
        - name: version
          in: path
          description: The version of the theme.
          required: true
          type: string
      responses:
        '200':
          description: Streams a image file
  /upload/contentplugin:
    post:
      tags:
        - plugins
      summary: Upload plugins
      description: 'End point for uploading plugins.'
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
       - in: formData
         name: plugin
         type: file
         description: The plugin file to upload.
      responses:
        '200':
          description: An object containing a success boolean
          schema:
            $ref: '#/definitions/Success'
  /output/{plugin}/publish/{id}:
    get:
      tags:
        - output
      summary: Download/publish a course
      description: 'Endpoint for downloading a built course. The standard plugin is "adapt". Alternative values would be defined in an output plugin installed in the authoring tool in: /plugins/output/'
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the course to be downloaded.
          required: true
          type: string
        - name: plugin
          in: path
          description: The plugin to be used for downloading.
          required: true
          type: string
      responses:
        '200':
          description: An object containing the a link to download the course and success status
          schema:
            $ref: '#/definitions/Download'
  /output/{plugin}/preview/{id}:
    get:
      tags:
        - output
      summary: Preview a course
      description: 'Endpoint for previewing course. This is more of a trigger to builder a course. The preview window URL path is created in the frontend JS. The standard plugin is "adapt". Alternative values would be defined in an output plugin installed in the authoring tool in: /plugins/output/'
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the course to be downloaded.
          required: true
          type: string
        - name: plugin
          in: path
          description: The plugin to be used for downloading.
          required: true
          type: string
      responses:
        '200':
          description: An object containing the a link to download the course and success status
          schema:
            $ref: '#/definitions/Preview'
  /download/{tenant}/{course}:
    get:
      tags:
        - output
      summary: Course download information
      description: 'Return information for downloading the published course.'
      produces:
        - application/json
      parameters:
        - name: tenant
          in: path
          description: The id of the tenant for the course to be downloaded.
          required: true
          type: string
        - name: course
          in: path
          description: The id of the course.
          required: true
          type: string
      responses:
        '200':
          description: An object containing values useful for downloading the published course
          schema:
            $ref: '#/definitions/Download'
  /download/{tenant}/{course}/{title}/download.zip:
    get:
      tags:
        - output
      summary: Download a published course
      description: 'Returns a zip of the published course.'
      produces:
        - application/zip
      parameters:
        - name: tenant
          in: path
          description: The id of the tenant for the course to be downloaded.
          required: true
          type: string
        - name: course
          in: path
          description: The id of the course.
          required: true
          type: string
        - name: title
          in: path
          description: The title of the course.
          required: true
          type: string
      responses:
        '200':
          description: Streams a zip file of the published course
  /export/{tenant}/{course}:
    get:
      tags:
        - output
      summary: To be completed
      description: 'To be completed'
      produces:
        - application/json
      parameters:
        - name: tenant
          in: path
          description: The id of the tenant for the course to be exported.
          required: true
          type: string
        - name: course
          in: path
          description: The id of the course.
          required: true
          type: string
      responses:
        '200':
          description: An object
  /export/{tenant}/{course}/{title}/download.zip:
    get:
      tags:
        - output
      summary: To be completed. Download an exported course source zip
      description: 'To be completed, possibly returns a zip of the exported course source files.'
      produces:
        - application/zip
      parameters:
        - name: tenant
          in: path
          description: The id of the tenant for the course to be exported.
          required: true
          type: string
        - name: course
          in: path
          description: The id of the course.
          required: true
          type: string
        - name: title
          in: path
          description: The title of the course.
          required: true
          type: string
      responses:
        '200':
          description: Streams a zip file of the exported course
  /lang/{lang}:
    get:
      tags:
        - language
      summary: Returns selected language strings for I18n.
      description: 'Endpoint for application localisation. Returns default en.json if lang not found.'
      produces:
        - application/json
      parameters:
        - name: lang
          in: path
          description: The two letter language code used to define the installed language in routes/lang.
          required: true
          type: string
      responses:
        '200':
          description: An object containing all translated values as key/value pairs.
  /config/config.json:
    get:
      tags:
        - configuration
      summary: Returns allowed configuration keys.
      description: 'Endpoint for accessing allowed application configuration values. e.g max login attempts.'
      produces:
        - application/json
      responses:
        '200':
          description: An object containing allowed configuration keys.
          schema:
            $ref: '#/definitions/Config'
  /autocomplete/tag:
    get:
      tags:
        - tags
      summary: Returns all tags.
      description: 'Endpoint for accessing tags. Returns all valid tags.'
      produces:
        - application/json
      responses:
        '200':
          description: An object containing all tags.
          schema:
            $ref: '#/definitions/Tags'


definitions:
  Login:
    type: object
    properties:
      success:
        type: boolean
      id:
        type: string
        description: Unique identifier for user.
      email:
        type: string
        description: Users email.
      tenantId:
        type: string
        description: ObjectId for users tenant.
      tenantName:
        type: string
        description: Tenant name.
      permissions:
        type: array
        items:
          type: string
  Usercreate:
    type: object
    properties:
      _id:
        type: string
        description: Unique identifier for user.
      email:
        type: string
        description: Users email.
      failedLoginCount:
        type: integer
        format: int32
        description: Number of failed login attempts.
      roles:
        type: array
        items:
          type: string
        description: An array containing the unique id for each role assigned to the user.
      auth:
        type: string
        description: Authentication type. By default this will return local.
      idNumber:
        type: string
        description: Currently not used.
      _tenantId:
        type: string
        description: Unique identifier for the tenant record assigned to this user.
      _isDeleted:
        type: boolean
        description: Is this user flagged as deleted.
  User:
    type: object
    properties:
      _id:
        type: string
        description: Unique identifier for user.
      email:
        type: string
        description: Users email.
      firstAccess:
        type: string
        description: The date the user first accessed the application. In dateTime format.
      lastAccess:
        type: string
        description: The date the user last accessed the application. In dateTime format.
      failedLoginCount:
        type: integer
        format: int32
        description: Number of failed login attempts.
      roles:
        type: array
        items:
          type: object
          properties:
            _id:
              type: string
              description: Unique identifier for user.
            name:
              type: string
              description: Unique identifier for user.
        description: An array containing the unique id for each role assigned to the user.
      auth:
        type: string
        description: Authentication type. By default this will return local.
      idNumber:
        type: string
        description: Currently not used.
      _tenantId:
        type: object
        properties:
          _id:
            type: string
            description: Unique identifier for user.
          name:
            type: string
            description: Unique identifier for user.
        description: Unique identifier for the tenant record assigned to this user.
      _isDeleted:
        type: boolean
        description: Is this user flagged as deleted.
  Me:
    type: object
    properties:
      _isDeleted:
        type: boolean
        description: Is this user flagged as deleted.
      _tenantId:
        type: string
        description: Unique identifier for the tenant record assigned to this user.
      idNumber:
        type: string
        description: Currently not used.
      auth:
        type: string
        description: Authentication type. By default this will return local.
      roles:
        type: array
        items:
          type: object
          properties:
            _id:
              type: string
              description: Unique identifier for user.
            name:
              type: string
              description: Unique identifier for user.
        description: An array containing the unique id for each role assigned to the user.
      failedLoginCount:
        type: integer
        format: int32
        description: Number of failed login attempts.
      password:
        type: string
        description: The hashed password for user.
      lastAccess:
        type: string
        description: The date the user last accessed the application. In dateTime format.
      invalidatePermissionCache:
        type: boolean
        description: To be confirmed
      firstAccess:
        type: string
        description: The date the user first accessed the application. In dateTime format.
      email:
        type: string
        description: Users email.
      _id:
        type: string
        description: Unique identifier for user.
      __v:
        type: integer
        format: int32
        description: To be confirmed
      rolesAsName:
        type: array
        items:
          type: string
        description: An array containing the names of roles assigned to the user.
  PasswordresetToken:
    type: object
    properties:
      _id:
        type: string
        description: Unique identifier for this password reset attempt.
      user:
        type: string
        description: Unique identifier for user.
      issueDate:
        type: string
        description: The date the password reset token was generated. In dateTime format
      ipAddress:
        type: string
        description: The IP address of the original remote request that used /user/resetpassword endpoint.
  Register:
    type: object
    properties:
      _id:
        type: string
        description: Unique identifier for the new user.
      email:
        type: string
        description: Email for new user.
  UserSession:
    type: object
    properties:
      isAuthenticated:
        type: boolean
      id:
        type: string
        description: Current authenticated user id.
      tenantId:
        type: string
        description: Current authenticated users tenant id.
      tenantName:
        type: string
        description: Current authenticated users tenant name.
      email:
        type: string
      otherLoginLinks:
        type: string
      permissions:
        type: array
        items:
          type: string
  Tenant:
    type: object
    properties:
      _id:
        type: string
        description: Unique identifier for this tenant.
      updatedAt:
        type: string
        description: The date the tenant record was last changed. In dateTime format.
      createdAt:
        type: string
        description: The date the tenant record was created. In dateTime format.
      database:
        type: object
        properties:
          dbPort:
            type: integer
            format: int32
            description: Tenant database port.
          dbPass:
            type: string
            description: Password to access the tenant database.
          dbUser:
            type: string
            description: Tenant database user account.
          dbHost:
            type: string
            description: Tenant database host URL.
          dbName:
            type: string
            description: Tenant database host URL.
      displayName:
        type: string
        description: The display name for this tenant.
      name:
        type: string
        description: The application name for this tenant.
      isMaster:
        type: boolean
        description: Is this tenant a master tenant.
      _isDeleted:
        type: boolean
        description: Is this tenant flagged as deleted.
  TenantDelete:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
  Course:
    type: object
    properties:
      _globals:
        type: object
        properties:
          _accessibility:
            type: object
            properties:
              accessibilityToggleTextOn:
                type: string
              accessibilityToggleTextOff:
                type: string
              skipNavigationText:
                type: string
              _accessibilityInstructions:
                type: object
                properties:
                  touch:
                    type: string
                  notouch:
                    type: string
                  ipad:
                    type: string
              _ariaLabels:
                type: object
                properties:
                  navigation:
                    type: string
                  skipNavigation:
                    type: string
                  menuLoaded:
                    type: string
                  menu:
                    type: string
                  menuItem:
                    type: string
                  menuViewButton:
                    type: string
                  page:
                    type: string
                  pageLoaded:
                    type: string
                  previous:
                    type: string
                  navigationBack:
                    type: string
                  navigationDrawer:
                    type: string
                  closeResources:
                    type: string
                  drawerBack:
                    type: string
                  drawer:
                    type: string
                  closePopup:
                    type: string
                  next:
                    type: string
                  done:
                    type: string
                  complete:
                    type: string
                  incomplete:
                    type: string
                  correct:
                    type: string
                  locked:
                    type: string
                  accessibilityToggleButton:
                    type: string
                  feedbackPopUp:
                    type: string
                  visited:
                    type: string
                  menuBack:
                    type: string
                  menuIndicatorHeading:
                    type: string
          _components:
            type: object
      _id:
        type: string
        description: Unique identifier for this course.
      _start:
        type: object
        properties:
          _isMenuDisabled:
            type: boolean
          _force:
            type: boolean
          _startIds:
            type: array
            items:
              type: string
          _isEnabled:
            type: boolean
      _type:
        type: string
      createdAt:
        type: string
      createdBy:
        type: string
      updatedAt:
        type: string
      customStyle:
        type: string
      _lockType:
        type: string
      _isShared:
        type: boolean
      _hasPreview:
        type: boolean
      _isSelected:
        type: boolean
      _classes:
        type: string
      tags:
        type: array
        items:
          type: string
      _buttons:
        type: object
        properties:
          disabledAriaLabel:
            type: string
          remainingAttemptText:
            type: string
          remainingAttemptsText:
            type: string
          _showFeedback:
            type: object
            properties:
              ariaLabel:
                type: string
              buttonText:
                type: string
          _hideCorrectAnswer:
            type: object
            properties:
              ariaLabel:
                type: string
              buttonText:
                type: string
          _showCorrectAnswer:
            type: object
            properties:
              ariaLabel:
                type: string
              buttonText:
                type: string
          _reset:
            type: object
            properties:
              ariaLabel:
                type: string
              buttonText:
                type: string
          _submit:
            type: object
            properties:
              ariaLabel:
                type: string
              buttonText:
                type: string
      _latestTrackingId:
        type: integer
        format: int32
      heroImage:
        type: string
      body:
        type: string
      displayTitle:
        type: string
      title:
        type: string
      _tenantId:
        type: string
      _isDeleted:
        type: boolean
  CourseCreate:
    type: object
    properties:
      _id:
        type: string
        description: Unique identifier for this course.
      _type:
        type: string
      createdAt:
        type: string
      createdBy:
        type: string
      updatedAt:
        type: string
      customStyle:
        type: string
      _lockType:
        type: string
      _isShared:
        type: boolean
      _hasPreview:
        type: boolean
      _isSelected:
        type: boolean
      _classes:
        type: string
      tags:
        type: array
        items:
          type: string
      _buttons:
        type: string
      _latestTrackingId:
        type: integer
        format: int32
      heroImage:
        type: string
      body:
        type: string
      displayTitle:
        type: string
      title:
        type: string
      _tenantId:
        type: string
      _isDeleted:
        type: boolean
  DuplicateCourse:
    type: object
    properties:
      success:
        type: boolean
      newCourseId:
        type: string
  MyCourse:
    type: object
    properties:
      _id:
        type: string
        description: Unique identifier for this course.
      _type:
        type: string
      createdAt:
        type: string
      createdBy:
        type: string
      updatedAt:
        type: string
      _isShared:
        type: boolean
      tags:
        type: array
        items:
          type: string
      heroImage:
        type: string
      title:
        type: string
      _tenantId:
        type: string
  ContentComponent:
    type: array
    items:
      type: object
      properties:
        _componentTypeDisplayName:
          type: string
        _id:
          type: string
        updatedAt:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        _layout:
          type: string
        _componentType:
          type: string
        _type:
          type: string
        _parentId:
          type: string
        _courseId:
          type: string
        body:
          type: string
        displayTitle:
          type: string
        title:
          type: string
        _isAvailable:
          type: boolean
        _isOptional:
          type: boolean
        _classes:
          type: string
        _component:
          type: string
        _isDeleted:
          type: boolean
  ContentNewLayout:
    type: object
    properties:
      newLayout:
        type: object
        properties:
          _layout:
            type: string
          _parentId:
            type: string
      siblingLayout:
        type: object
        properties:
          _layout:
            type: string
          _parentId:
            type: string
  ClipboardCopyData:
    type: object
    properties:
      objectId:
        type: string
      courseId:
        type: string
      referenceType:
        type: string
  ClipboardPasteData:
    type: object
    properties:
      id:
        type: string
      parentId:
        type: string
      layout:
        type: string
      sortOrder:
        type: string
      courseId:
        type: string
  Assets:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        createdAt:
          type: string
        metadata:
          type: object
          properties:
            duration:
              type: integer
              format: int32
        assetType:
          type: string
        mimeType:
          type: string
        thumbnailPath:
          type: boolean
        directory:
          type: string
        createdBy:
          type: string
        repository:
          type: string
        path:
          type: string
        description:
          type: string
        filename:
          type: string
        size:
          type: string
        title:
          type: string
        tags:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              title:
                type: string
        isDirectory:
          type: boolean
        _isDeleted:
          type: boolean
  Asset:
    type: object
    properties:
      _id:
        type: string
      createdAt:
        type: string
      metadata:
        type: object
        properties:
          duration:
            type: integer
            format: int32
      assetType:
        type: string
      mimeType:
        type: string
      thumbnailPath:
        type: boolean
      directory:
        type: string
      createdBy:
        type: string
      repository:
        type: string
      path:
        type: string
      description:
        type: string
      filename:
        type: string
      size:
        type: string
      title:
        type: string
      tags:
        type: array
        items:
          type: object
          properties:
            _id:
              type: string
            title:
              type: string
      isDirectory:
        type: boolean
      _isDeleted:
        type: boolean
  AssetCreate:
    type: object
    properties:
      success:
        type: boolean
      id:
        type: string
  Download:
    type: object
    properties:
      success:
        type: boolean
      payload:
        type: object
        properties:
          success:
            type: boolean
          filename:
            type: string
          zipName:
            type: string
  Preview:
    type: object
    properties:
      success:
        type: boolean
      payload:
        type: object
        properties:
          success:
            type: boolean
  ErrorCode:
    type: object
    properties:
      success:
        type: boolean
      errorCode:
        type: integer
        format: int32
  ErrorMessage:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
  Success:
    type: object
    properties:
      success:
        type: boolean
  Config:
    type: object
    properties:
      rootUrl:
        type: string
      outputPlugin:
        type: string
      masterTenantID:
        type: string
      recaptchaSiteKey:
        type: string
      useSmtp:
        type: boolean
      useffmpeg:
        type: boolean
      isProduction:
        type: boolean
      maxLoginAttempts:
        type: integer
        format: int32
  Tags:
    type: object
    properties:
      title:
        type: string
      value:
        type: string
      _id:
        type: string
  PluginArray:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        issues:
          type: string
        homepage:
          type: string
        framework:
          type: string
        version:
          type: string
        description:
          type: string
        displayName:
          type: string
        name:
          type: string
        isLocalPackage:
          type: boolean
        _isAvailableInEditor:
          type: boolean
        _isDeleted:
          type: boolean
        globals:
          type: object
        properties:
          type: object
  PluginSingle:
    type: object
    properties:
      _id:
        type: string
      issues:
        type: string
      homepage:
        type: string
      framework:
        type: string
      version:
        type: string
      description:
        type: string
      displayName:
        type: string
      name:
        type: string
      isLocalPackage:
        type: boolean
      _isAvailableInEditor:
        type: boolean
      _isDeleted:
        type: boolean
      globals:
        type: object
      properties:
        type: object
  PluginCheck:
    type: object
    properties:
      success:
        type: boolean
      isUpdateable:
        type: boolean
  PluginsUpgraded:
    type: object
    properties:
      success:
        type: boolean
      upgraded:
        type: array
        items:
          type: string
